{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","hooks/useForm.js","firebase/firebase-config.js","actions/ui.js","components/notes/NotesAppbar.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","JounalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","setError","err","finishLoading","NotesAppbar","dispatch","useDispatch","useSelector","className","style","display","onChange","e","file","files","startUploadImg","onClick","document","querySelector","click","startSaveNote","loadNotes","a","collection","get","notesSnap","forEach","snapHijo","push","data","fileUpload","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","addNewNote","activeNote","startLoadingNotes","setNotas","getState","url","notesToFireStore","doc","update","refresNote","Swal","fire","title","text","allowOutSideClick","onBeforeOpen","showLoading","fileUrl","close","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","console","log","message","logout","LoginScreen","formValues","onSubmit","preventDefault","placeholder","autoComplete","disabled","signInWithPopup","src","alt","to","RegisterScreen","confirm","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","signOut","newNote","Date","getTime","add","NotesScreen","activeId","useRef","useEffect","current","delete","StartDeleting","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setchecking","isLoggEdIn","setisLoggEdIn","onAuthStateChanged","JounalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6b5cb558.chunk.js","sourcesContent":["\r\n\r\nexport const types ={\r\n\r\n    login:'[Auth] Login',\r\n    logout:'[Auth] Logout', \r\n\r\n    //Control de Erros\r\n    uiSetError: '[UI] set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    //activar y desactivar boton\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew:'[Notes] New notes',\r\n    notesActive:'[Notes] set active note',\r\n    notesLoad:'[Notes] Load notes',\r\n    notesUpdated:'[Notes] Update note ',\r\n    notesFileUrl:'[Notes] Update image url',\r\n    notesDelete:'[Notes] Delete note',\r\n    notesLogoutCleaning:'[Notes] Logout cleaning',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading:false,\r\n    msgError:null\r\n}\r\n\r\nexport  const uiReducer = (state=initialState , action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError:action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError:null\r\n            }  \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading:true,\r\n               \r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                        \r\n            }\r\n\r\n        default:\r\n           return state;\r\n    }\r\n\r\n}","\r\n/* \r\n{  \r\n    notes:[],\r\n    active: null,\r\n    active:{\r\n        id:'aadasddvbvklvjbvjkfdudu',\r\n        title:'',\r\n        body:'',\r\n        imageUrl:'',\r\n        date:12/04/2013\r\n    }\r\n}\r\n\r\n*/\r\n\r\n    \r\nimport { types } from \"../types/types\";\r\nimport { act } from \"@testing-library/react\";\r\n\r\nconst initialState = {\r\n    notes:[],\r\n    active:null\r\n}\r\n\r\nexport const notesReducer = (state=initialState,action) =>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:{\r\n            return{\r\n                ...state,\r\n                notes:[action.payload, ...state.notes]\r\n            }\r\n        }\r\n        case types.notesLoad:\r\n           \r\n            return {\r\n                ...state,\r\n                notes:[...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes:state.notes.map(\r\n                    note => note.id === action.payload.id  //evaluar si la nbota es ingual a action \r\n                    ?action.payload.note// si id es el mismo\r\n                    :note //else\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active:null,\r\n                notes:state.notes.filter(note => note.id !==action.payload)\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            //console.log(action.payload)\r\n            ///console.log(state)\r\n            return {\r\n                ...state,\r\n                active:null,\r\n                notes:[]\r\n            }\r\n            \r\n           \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers,applyMiddleware,compose }  from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport {authReducer} from  '../reducers/authReducer'\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n         auth : authReducer,\r\n         ui   : uiReducer,\r\n         notes:notesReducer\r\n});\r\n\r\n\r\nexport const store = createStore( \r\n        reducers,\r\n        composeEnhancers(\r\n                applyMiddleware(thunk)\r\n        )\r\n        );\r\n","import { types } from \"../types/types\";\r\n\r\n /* \r\n     {\r\n         uid:wwer34324234234,\r\n         name:\"marcel\"\r\n     }\r\n */\r\n\r\n/*  const initialState={\r\n     uid:12345,\r\n     name:'Luca',\r\n     dir:{\r\n          b:12\r\n     }\r\n} */\r\n\r\nexport const authReducer = (state={},action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid:action.payload.uid,\r\n                name:action.payload.displayName                \r\n            }\r\n                        \r\n        case types.logout:\r\n            return { }\r\n                \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState=initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBvshdYHa4-wj8Lj7DeZZikcatfQA-CFp8\",\r\n    authDomain: \"react-app-cursos-e05dd.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-e05dd.firebaseio.com\",\r\n    projectId: \"react-app-cursos-e05dd\",\r\n    storageBucket: \"react-app-cursos-e05dd.appspot.com\",\r\n    messagingSenderId: \"775913684815\",\r\n    appId: \"1:775913684815:web:c5d3d01578a27e20ef8f3a\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore()\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase,\r\n  }","import { types } from '../types/types';\r\n\r\nexport const setError=(err)=>({\r\n\r\n    type:types.uiSetError,\r\n    payload:err\r\n})\r\n\r\nexport const removeErr=()=>({\r\n\r\n    type:types.uiRemoveError\r\n})\r\n\r\nexport const startLoading=()=>({\r\n\r\n    type:types.uiStartLoading\r\n\r\n} )\r\n\r\nexport const finishLoading=()=>({\r\n\r\n    type:types.uiFinishLoading\r\n\r\n})","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploadImg } from '../../actions/notes';\r\n\r\nexport const NotesAppbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes)\r\n\r\n    const handleSave = ()=>{\r\n         //console.log(active);\r\n        dispatch(startSaveNote(active));\r\n\r\n    }\r\n\r\n    const handlePictureClick=()=>{\r\n        document.querySelector('#fileSelector').click();\r\n               \r\n    }\r\n    const handleFileChange=(e)=>{\r\n\r\n       const file =  e.target.files[0];\r\n\r\n       if (file) {\r\n           dispatch(startUploadImg(file));\r\n           \r\n       }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span> 28 de agosto  2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display:'none'}}\r\n                onChange={handleFileChange}\r\n\r\n            />\r\n\r\n            <div>\r\n\r\n                <button  \r\n                     className=\"btn\"\r\n                     onClick={handlePictureClick}\r\n                     >\r\n                    Picture\r\n\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}              \r\n                >\r\n                    Save\r\n\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { db } from \"../firebase/firebase-config\"\r\nimport { NotesAppbar } from \"../components/notes/NotesAppbar\";\r\n\r\n\r\nexport const loadNotes = async(uid)=>{\r\n\r\n    const notesSnap = await  db.collection(`${uid}/journal/notes`).get();\r\n    \r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapHijo=>{\r\n\r\n        notes.push({\r\n            id:snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n\r\n\r\n    return notes;\r\n}","\r\nexport const fileUpload=async(file)=>{\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/m4rcel/upload';\r\n  \r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try{\r\n        const resp = await fetch(cloudUrl,{\r\n            method:'POST',\r\n            body:formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    }catch(err){\r\n        throw err;\r\n    }\r\n\r\n\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport {types} from '../types/types';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { auth } from 'firebase';\r\n\r\n//react-journal\r\n\r\nexport const startNewNotes=()=>{\r\n\r\n    return async (dispatch,getState)=>{\r\n\r\n        const {uid}=getState().auth;\r\n        //  const {uid}=getState().auth.uid;\r\n        \r\n        const newNote={\r\n\r\n            title:'',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n\r\n        const doc=  await db.collection(`${uid}/journal/notes`).add(newNote)\r\n        \r\n        dispatch(activeNote(doc.id,newNote));\r\n\r\n        dispatch(addNewNote(doc.id,newNote));\r\n\r\n     }\r\n\r\n}\r\n export const addNewNote=(id,note)=>({\r\n   \r\n    type:types.notesAddNew,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n })\r\n\r\nexport const activeNote = (id,note)=>({\r\n    \r\n    type:types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n\r\n});\r\n\r\nexport const startLoadingNotes = (uid) =>{\r\n\r\n    return async(dispatch)=>{\r\n\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotas(notes));\r\n\r\n    };\r\n}\r\n\r\n\r\nexport const setNotas =(notes)=>({\r\n    type: types.notesLoad,\r\n    payload:notes\r\n\r\n});\r\n\r\n\r\nexport const startSaveNote=(note)=>{\r\n\r\n    return async(dispatch,getState)=>{\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        if (!note.url) {\r\n\r\n            delete note.url;\r\n            \r\n        }\r\n\r\n        const notesToFireStore = {...note}\r\n\r\n\r\n        delete notesToFireStore.id;// eliminar la propiedad id\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(notesToFireStore);\r\n\r\n        dispatch(refresNote(note.id,notesToFireStore));\r\n\r\n        Swal.fire('Saved ' ,note.title,'success');\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const refresNote=(id,note)=>({\r\n\r\n    type:types.notesUpdated,\r\n    payload: {\r\n        id,\r\n    note:{\r\n        id,\r\n        ...note\r\n    }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const startUploadImg=(file)=>{\r\n\r\n    return async(dispatch,getState)=>{ //getState ver la nota actual\r\n\r\n        const {active:activeNote}= getState().notes;\r\n        //console.log(activeNote);\r\n        \r\n        // abrir loading de cargar\r\n        Swal.fire({\r\n            title:'Uploading.....',\r\n            text:'Please wait....',\r\n            allowOutSideClick:false,\r\n            onBeforeOpen:()=>{\r\n               Swal.showLoading();\r\n            }\r\n        })\r\n \r\n        const fileUrl = await fileUpload(file);\r\n      \r\n        //console.log(fileUrl);\r\n        // guaradar url en notas.URL\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n      \r\n         // Cerrar loading de cargar\r\n         Swal.close();\r\n\r\n    }\r\n}\r\n\r\n//DELETE NOTE\r\nexport const StartDeleting =(id)=>{\r\n\r\n    return async(dispatch,getState)=>{\r\n\r\n        const uid= getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n        \r\n        dispatch(deleteNote(id));\r\n    }\r\n\r\n}\r\n\r\nexport const deleteNote=(id)=>({\r\n\r\n    type:types.notesDelete,\r\n    payload:id\r\n\r\n})\r\n\r\n\r\nexport const noteLogout=()=>({\r\n\r\n    type:types.notesLogoutCleaning\r\n})\r\n","// ES6 Modules or TypeScript\r\nimport Swal from 'sweetalert2';\r\n\r\nimport {firebase, googleAuthProvider} from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\";\r\nimport { startLoading, finishLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword=(email,password)=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        dispatch(\r\n            startLoading()\r\n        );\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then(({user})=>{\r\n                \r\n                \r\n                dispatch(\r\n                    login(user.uid,user.displayName)\r\n                )\r\n                dispatch(\r\n                    finishLoading()\r\n                );\r\n            }).catch(e=>{\r\n                console.log(e);\r\n                dispatch(\r\n                    finishLoading()\r\n                );\r\n\r\n                Swal.fire('Error',e.message,'error');\r\n               \r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email,password,name)=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n            .then( async ({user})=>{\r\n\r\n              await  user.updateProfile({displayName:name});\r\n                dispatch(\r\n                    login(user.uid,user.displayName)\r\n                )\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n                Swal.fire('Error',e.message,'error');\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startGoogleLogin=()=>{\r\n\r\n    return (dispatch)=>{\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n          .then(({user})=>{\r\n              dispatch(\r\n                  login(user.uid,user.displayName)\r\n              )\r\n          });\r\n    }\r\n}\r\n\r\n//dispatch\r\n\r\nexport const login =(uid,displayName)=>({\r\n    \r\n        type:types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n        }\r\n\r\n})\r\n\r\nexport const startLogout=()=>{//asincrono\r\n\r\n    return async(dispatch)=>{\r\n\r\n       await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const logout=()=>({\r\n\r\n    type:types.logout\r\n})","\r\nimport React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector(state => state.ui)\r\n\r\n    const {loading}=state;\r\n\r\n\r\n    const [formValues,handleInputChange] = useForm({\r\n        email:'marcel@gmail.com',\r\n        password:'123456'\r\n    });\r\n\r\n    const {email,password} = formValues;\r\n\r\n    const handleLogin =(e)=>{\r\n        \r\n        e.preventDefault();\r\n      //   console.log(email,password);\r\n\r\n     dispatch(startLoginEmailPassword(email,password));\r\n     \r\n    }\r\n\r\n    const handleGoogleLogin =()=>{\r\n\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\"> Login</h3>\r\n\r\n            <form onSubmit={handleLogin}\r\n                  className=\"animate__animated animate__fadeIn animate__faster\"\r\n              >\r\n                <input\r\n                     type=\"text\"\r\n                     placeholder=\"Email\"\r\n                     name=\"email\"\r\n                     className=\"auth__input\"\r\n                     autoComplete=\"off\"\r\n                     value={email}\r\n                     onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                     type=\"password\"\r\n                     placeholder=\"Password\"\r\n                     name=\"password\"\r\n                     className=\"auth__input\"\r\n                     value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button \r\n                       type=\"submit\"\r\n                       className=\"btn btn-primary btn-block\"\r\n                       disabled={ loading }  \r\n                >\r\n                   Login\r\n                </button>\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social Networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                    </div>\r\n                    <p className=\"btn-text\">\r\n                        <b>Sign in with google</b>\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new acount\r\n                </Link>\r\n\r\n            </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n ","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeErr } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state =>state.ui)\r\n   \r\n    const {msgError} = state;\r\n\r\n    const [values,handleInputChange] =useForm({\r\n        name:\"marcel\",\r\n        email:\"marcel@gmail.com\",\r\n        password:\"123456\",\r\n        confirm:\"123456\"\r\n    });\r\n\r\n    const {name,email,password,confirm}=values;\r\n\r\n    const handleRegister=(e)=>{\r\n        e.preventDefault();\r\n        \r\n        /* console.log(`mane : ${name}`);\r\n        console.log(`email : ${email}`);\r\n        console.log(`password : ${password}`);\r\n        console.log(`confirm : ${confirm}`); */\r\n\r\n        if (isFormValid()) {\r\n\r\n            dispatch(startRegisterWithEmailPasswordName(email,password,name));\r\n\r\n        }\r\n    }\r\n\r\n    const isFormValid=()=>{\r\n\r\n        if (name.trim().length ===0) {\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        }else if(!validator.isEmail(email)){\r\n\r\n            dispatch(setError('Email is not valid'));\r\n\r\n            return false; \r\n\r\n        }else if (password !== confirm ||  password.length < 5) {\r\n            \r\n            dispatch(setError('Password should be at last 6 characters and match each other'));\r\n\r\n           return false;\r\n            \r\n        }\r\n\r\n        dispatch(removeErr());\r\n       return true;\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\"> Register</h3>\r\n\r\n            <form onSubmit={handleRegister}\r\n                  className=\"animate__animated animate__fadeIn animate__faster\"\r\n                  >\r\n\r\n               { \r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                       {msgError}\r\n                    </div>)\r\n                }\r\n                \r\n                <input\r\n                     type=\"text\"\r\n                     placeholder=\"Name\"\r\n                     name=\"name\"\r\n                     value={name}\r\n                     className=\"auth__input\"\r\n                     onChange={handleInputChange}\r\n                     autoComplete=\"off\"\r\n                />\r\n\r\n                <input\r\n                     type=\"text\"\r\n                     placeholder=\"Email\"\r\n                     name=\"email\"\r\n                     value={email}\r\n                     className=\"auth__input\"\r\n                     onChange={handleInputChange}\r\n                     autoComplete=\"off\"\r\n                />\r\n\r\n                <input\r\n                     type=\"password\"\r\n                     placeholder=\"Password\"\r\n                     name=\"password\"\r\n                     value={password}\r\n                     className=\"auth__input\"\r\n                     onChange={handleInputChange}\r\n                />\r\n                <input\r\n                     type=\"password\"\r\n                     placeholder=\"Confirm\"\r\n                     name=\"confirm\"\r\n                     value={confirm}\r\n                     className=\"auth__input\"\r\n                     onChange={handleInputChange}\r\n                />\r\n\r\n                <button \r\n                       type=\"submit\"\r\n                       className=\"btn btn-primary btn-block\"\r\n                      \r\n                >\r\n                   Register\r\n                </button>\r\n\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className = \"auth__main\">\r\n        \r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={LoginScreen}/>\r\n                    <Route exact path=\"/auth/register\" component={RegisterScreen}/>\r\n                    \r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n     const noteDate = moment(date);\r\n     \r\n     const dispatch = useDispatch();\r\n\r\n     const handleEntryClick=()=>{\r\n\r\n        dispatch(activeNote(id,{date,title,body,url}));\r\n\r\n     }\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n             onClick={handleEntryClick}\r\n        >\r\n            {   \r\n                url && \r\n                <div \r\n                className=\"jounal__entry-picture\"\r\n                style={{\r\n                    backgroundSize:'cover',\r\n                    backgroundImage:`url(${url})`\r\n\r\n                }}\r\n                >\r\n                </div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                  <p className=\"journal__entry-title\">\r\n                     {title}\r\n                  </p>\r\n                  <p className=\"journal__entry-content\">\r\n                    {body}\r\n\r\n                  </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n               <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const state = useSelector(state => state.notes);\r\n    const {notes} = state;\r\n\r\n    //console.log(notes);\r\n  //className=\"animate__animated animate__fadeIn animate__faster\"\r\n    return (\r\n        <div className=\"journal__entries \">\r\n            {\r\n                notes.map((note) => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                        \r\n                    />\r\n\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNotes } from '../../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const state = useSelector(state => state.auth);\r\n\r\n    const {name} = state;\r\n \r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout=()=>{\r\n\r\n      dispatch(startLogout());\r\n\r\n    }\r\n\r\n    const handleAddNew =()=>{\r\n\r\n        dispatch(startNewNotes());\r\n\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__siderbar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>  {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                    >\r\n                    Logout\r\n\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n                >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries/>\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { NotesAppbar } from './NotesAppbar';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {useForm}  from '../../hooks/useForm';\r\nimport { activeNote, StartDeleting } from '../../actions/notes';\r\n \r\nexport const NotesScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const {active:note} = useSelector(state => state.notes)\r\n     \r\n    const [formValues,handleInputChange,reset] = useForm(note);\r\n\r\n    const {body,title,id} = formValues;\r\n\r\n    const activeId = useRef(note.id);//refesca solo esa parte\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        if (note.id !== activeId.current) {\r\n            reset(note)\r\n\r\n            activeId.current=note.id\r\n        }\r\n    }, [note ,reset])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(activeNote(formValues.id,{...formValues}));\r\n\r\n    }, [formValues,dispatch])\r\n\r\n    \r\n    //console.log(formValues); \r\n    //console.log(note);\r\n\r\n    const handleDelete=()=>{\r\n\r\n        dispatch(StartDeleting(id));\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppbar/>\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                      type=\"text\"\r\n                      placeholder=\"some awesome title\"\r\n                      className=\"notes__title-input\"\r\n                      autoComplete=\"off\"\r\n                      name=\"title\"\r\n                      value={title}\r\n                      onChange={handleInputChange}\r\n\r\n                      />\r\n                <textarea\r\n                     placeholder=\"wath happened today\"\r\n                     className=\"notes__textarea\"\r\n                     name=\"body\"\r\n                     value={body}\r\n                     onChange={handleInputChange}\r\n                >\r\n\r\n                </textarea>\r\n\r\n                    {\r\n                    (note.url)\r\n                    &&\r\n                     \r\n                    (\r\n                        <div className=\"notes__image\">\r\n                            <img\r\n                            src={note.url}\r\n                            alt=\"image\"\r\n                        />\r\n                        </div>\r\n                     )\r\n                     \r\n                    }\r\n\r\n               \r\n            </div>\r\n            \r\n            <button \r\n               className=\"btn btn-danger\"\r\n               onClick={handleDelete}\r\n               > \r\n\r\n               Delete\r\n\r\n            </button>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                select Smething\r\n                 \r\n                 pr create an entrys!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NotesScreen } from '../notes/NotesScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n \r\nexport const JournalScreen = () => {\r\n\r\n    const state = useSelector(state => state.notes)\r\n\r\n    const {active} = state;\r\n    //console.log('active: ',active); \r\n\r\n    return (\r\n        <div className=\"jounal__main-content  animate__fadeIn animate__faster\">\r\n            <Sidebar/>\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active) //si la nota tiene algo entonces\r\n                    ?( <NotesScreen/> ) //SI\r\n                    :(<NothingSelected/>)//NO\r\n                    \r\n                }\r\n\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n     \r\n    return (\r\n        <Route {...rest}\r\n\r\n          component={(props)=>(\r\n              \r\n            (isAuthenticated)\r\n            ? (<Redirect to=\"/\" />) //si esta autentificado y no es ruta publica _-sacar a /\r\n            :(<Component {...props}/>) //si esta autetificado manda todo los props\r\n                \r\n              \r\n          )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes={\r\n\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    localStorage.setItem('lastPath',rest.location.pathname);\r\n\r\n    \r\n    return (\r\n        <Route {...rest}\r\n          component={(props)=>(\r\n              \r\n            (isAuthenticated)\r\n                ?(<Component {...props}/>) //si esta autetificado manda todo los props\r\n                :(<Redirect to=\"/auth/login\" />)\r\n              \r\n          )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\n","\r\nimport React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [checking, setchecking] = useState(true);\r\n    \r\n    const [isLoggEdIn, setisLoggEdIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        //obervable\r\n        firebase.auth().onAuthStateChanged( async(user)=>{\r\n\r\n         if (user?.uid) { //si existe uid\r\n             dispatch(login(user.uid,user.displayName))\r\n             setisLoggEdIn(true)\r\n              \r\n             //Cargar Notas\r\n             \r\n           dispatch(startLoadingNotes(user.uid));\r\n\r\n         }\r\n         else{\r\n            setisLoggEdIn(false)\r\n\r\n         }\r\n\r\n         setchecking(false)\r\n\r\n \r\n        })\r\n    }, [dispatch,setchecking,setisLoggEdIn])\r\n\r\n    if (checking) {\r\n        return(\r\n            <h1> Wait... </h1>\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                      path=\"/auth\"\r\n                      component={AuthRouter}\r\n                      isAuthenticated={isLoggEdIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                       exact\r\n                       path=\"/\"\r\n                       component={JournalScreen}\r\n                       isAuthenticated={isLoggEdIn}\r\n                    />  \r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n     \r\n                </Switch>\r\n            </div>            \r\n        </Router>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const JounalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JounalApp } from './JounalApp';\n\nimport './styles/styles.scss'\n\nReactDOM.render(\n  \n    <JounalApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}